name: 'node_modules'
description: 'Installing node_modules. From cache if possible.'
inputs:
  NPM_TOKEN:
    type: string
    required: true
  branch:
    type: string
    required: true

runs:
  using: 'composite'
  steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ inputs.branch }}

    - uses: actions/cache@v3
      with:
        path: |
          **/node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - id: cache
      name: Detect cache hit
      # ("actions/cache" have its own cache-hit output but it doesn't seem to work)
      shell: bash
      run: |
        cacheHit=$([ -d "node_modules" ] && echo true || echo false)
        echo "hit=$cacheHit" >> $GITHUB_OUTPUT

    - name: Setup node
      if: ${{ steps.cache.outputs.hit == 'false' }}
      uses: actions/setup-node@v3
      with:
        node-version-file: .nvmrc

    - name: Add npmrc for private repo access
      if: ${{ steps.cache.outputs.hit == 'false' }}
      shell: bash
      run: |
        echo //npm.pkg.github.com/:_authToken=${{ inputs.NPM_TOKEN }} >> .npmrc

    - name: Run yarn install
      if: ${{ steps.cache.outputs.hit == 'false' }}
      shell: bash
      run: |
        yarn install --frozen-lockfile

    - name: Reset .npmrc
      if: ${{ steps.cache.outputs.hit == 'false' }}
      shell: bash
      run: |
        git checkout .npmrc

    # Runs postinstall script if if cache were found.
    # Reason is that if for instance a new patch-package patch is added,
    # it wont be included in the cached node_modules.
    - name: Postinstall
      if: ${{ steps.cache.outputs.hit == 'true' }}
      shell: bash
      run: |
        yarn postinstall

